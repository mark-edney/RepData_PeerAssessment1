grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,10])
Labels[grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,10])]
Labels[grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,10]),]
Labels[grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,10]),]
names(Labels)
#Question 4
Coal<-grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,7:10])
#Question 4
Coal<-grep(".*[Cc][Oo][Aa][Ll].*",Labels[,7:10])
#Question 4
Coal<-grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,7:10])
#Question 4
Coal<-grepl(".*[Cc][Oo][Aa][Ll].*",Labels[,7]|Labels[,8])
a<-Labels[7:10]
View(a)
#Question 4
Coal<-grepl(".*[Cc][Oo][Aa][Ll].*",a)
#Question 4
Coal<-any(grepl(".*[Cc][Oo][Aa][Ll].as.matrix(Labels[7:10])))
a<-Labels[7:10]
)
#Question 4
Coal<-any(grepl(".*[Cc][Oo][Aa][Ll].as.matrix(Labels[7:10])))
#Question 4
Coal<-any(grepl(".*[Cc][Oo][Aa][Ll].*",as.matrix(Labels[7:10]))
as.matrix(Labels[7:10])
a<-as.matrix(Labels[7:10])
View(a)
#Question 4
Coal<-any(grepl(".*[Cc][Oo][Aa][Ll].*",as.matrix(Labels[7:10])))
names(Labels)
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",c(SCC.Level.One,SCC.Level.Two,SCC.Level.Three,SCC.Level.Four)))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Three))
View(Coal)
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two)grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Three)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Four))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Three))
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Three)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Four))
View(Coal)
#Question 4
Coal<-Labels%>%
filter(grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.One)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Two)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Three)|grepl(".*[Cc][Oo][Aa][Ll].*",SCC.Level.Four))
View(Coal)
library(dplyr)
library(ggplot2)
url<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url,"EPAdata")
Data<-readRDS("summarySCC_PM25.rds")
Labels<-readRDS("Source_Classification_Code.rds")
logdata<-Data
logdata$Emissions<-log10(logdata$Emissions)
logdata$Emissions<-log10(logdata$Emissions)
library(dplyr)
library(ggplot2)
url<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url,"EPAdata")
Data<-readRDS("summarySCC_PM25.rds")
Labels<-readRDS("Source_Classification_Code.rds")
logdata<-Data
logdata$Emissions<-log10(logdata$Emissions)
#Question 1
boxplot(logdata$Emissions[1:1000])
#Question 1
boxplot(logdata$Emissions~logdata$year)
setwd("~/R/Reproducible Research/Week 2/RepData_PeerAssessment1")
AMdata<-read.csv("//activity//activity.csv")
setwd("~/R/Reproducible Research/Week 2/RepData_PeerAssessment1")
AMdata<-read.csv("//activity//activity.csv")
dir()
AMdata<-read.csv("//activity.zip//activity.csv")
AMdata<-read.csv("//activity")
AMdata<-read.csv("//activity.zip/activity.csv")
AMdata<-read.csv("/activity.zip/activity.csv")
dir()
AMdata<-read.csv("//activity.csv")
AMdata<-read.csv("activity.csv")
AMdata<-read.csv("//activity/activity.csv")
setwd("//activity.zip")
dir()
setwd("\\activity.zip")
setwd("activity.zip")
setwd("activity")
setwd("//activity")
unzip("activity.zip")
dir()
AMdata<-read.csv("//activity.csv")
AMdata<-read.csv("activity.csv")
AMdata<-read.csv("/activity/activity.csv")
AMdata<-read.csv("//activity/activity.csv")
View(AMdata)
?read.csv
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
View(AMdata)
str(AMdata)
library(lubridate)
AMdata$date<-ymd(AMdata$date)
str(AMdata)
AMdata$steps[1]
is.na(AMdata$steps)
Stepmean<-mean(AMdata$step,na.rm=T)
Stepmean<-mean(AMdata$step)
Stepmean<-mean(AMdata$step,na.rm=T)
Steptotal<-sum(AMdata,na.rm = T)
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
library(lubridate)
AMdata$date<-ymd(AMdata$date)
Steptotal<-sum(AMdata,na.rm = T)
Steptotal<-sum(AMdata$steps,na.rm = T)
hist(AMdata$steps)
Stepmean<-mean(AMdata$step,na.rm=T)
Stepmed<-median(AMdata$step,na.rm=T)
Steptotal<-sum(AMdata$steps,na.rm = T)
hist(AMdata$steps,xlab = "Number of steps")
Stepmean<-mean(AMdata$step,na.rm=T)
Stepmed<-median(AMdata$step,na.rm=T)
Steptotal<-sum(AMdata$steps,na.rm = T)
hist(AMdata$steps,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmean<-mean(AMdata$step,na.rm=T)
Stepmed<-median(AMdata$step,na.rm=T)
View(AMdata)
View(AMdata)
Steptotal<-tapply(AMdata$step, date, sum)
Steptotal<-tapply(AMdata$step, date, sum,na.rm=T)
Steptotal<-tapply(AMdata$step, date, sum,na.rm=T)
Steptotal<-tapply(AMdata$step, AMdata$date, sum,na.rm=T)
hist(AMdata$steps,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmean<-mean(AMdata$step,na.rm=T)
Stepmed<-median(AMdata$step,na.rm=T)
unique(AMdata$date)
Steptotal<-tapply(AMdata$step, AMdata$date, sum,na.rm=T)
hist(Steptotal,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmean<-mean(Steptotal,na.rm=T)
Stepmed<-median(Steptotal,na.rm=T)
Steptotal<-tapply(AMdata$step, AMdata$date, sum,na.rm=T)
hist(Steptotal,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmean<-mean(Steptotal,na.rm=T)
print(Stepmean)
Stepmed<-median(Steptotal,na.rm=T)
plot(AMdata$interval,AMdata$steps,type = "l")
plot(AMdata$interval,Stepmean,type = "l")
plot(AMdata$interval[1:length(Stepmean)],Stepmean,type = "l")
AMdata$interval[1:length(Stepmean)]
str(Stepmean)
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepmean)],Stepmean,type = "l")
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepmean)],Stepint,type = "l")
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l")
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "number of steps",main = "Average steps per interval")
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Max<-max(Stepint)
print(Max)
AMdata$interval[AMdata$steps==Max]
sum(AMdata$interval[AMdata$steps==Max])
sum(AMdata$interval[AMdata$steps==Max],na.rm=T)
Stepint==Max
Stepint[Stepint==Max]
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Max<-max(Stepint)
Intmax<-Stepint[Max]
print(Intmax)
Max
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Max<-max(Stepint)
Intmax<-Stepint[Stepint==max]
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Max<-max(Stepint)
Intmax<-Stepint[Stepint==Max]
print(Intmax)
str(Intmax)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
?na.approx
?na.approx
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx(DF2$steps)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx(DF2$steps)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx(DF2$steps)
DF2<-na.approx(AMdata)
DF2$steps<-na.approx(DF2$steps)
DF2$steps<-na.approx(DF2$steps,na.rm=F)
sum(is.na(DF2))
DF2$steps<-na.approx(DF2$steps)
DF2$steps<-na.approx(DF2$steps,na.rm=F,maxgap = Inf)
sum(is.na(DF2))
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx(DF2$steps,na.rm=F,maxgap = Inf)
sum(is.na(DF2))
DF2[is.na(DF2)]
View(DF2)
View(DF2)
DF2$steps<-na.approx(DF2$steps)
DF2<-na.approx(DF2)
?na.approx
DF2$steps<-na.approx(DF2$steps,x=DF2$interval,na.rm=F,maxgap = Inf)
DF2$steps<-na.approx(DF2$steps,index.default=DF2$interval,na.rm=F,maxgap = Inf)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2<-na.approx.default(AMdata,na.rm = F)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
print(sum(is.na(DF2$steps)))
Steptotal
Stepint
nrows(AMdata$steps)
nrows(AMdata)
nrow(AMdata)
nrow(Stepint)
nrow(Stepint)/nrows(AMdata)
nrow(Stepint)/nrow(AMdata)
nrow(AMdata)/nrow(Stepint)
sum(is.na(Stepint))
rep(Stepint,nrow(AMdata)/nrow(Stepint))
rep(Stepint,nrow(AMdata)/nrow(Stepint)+1)
rep(Stepint,nrow(AMdata)/nrow(Stepint))
rep(Stepint,nrow(AMdata)/nrow(Stepint))
nrow(AMdata)/nrow(Stepint)
rep(Stepint,nrow(AMdata)/nrow(Stepint)-1)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
repStepint<-rep(Stepint,nrow(AMdata)/nrow(Stepint))
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
repStepint<-rep(Stepint,nrow(AMdata)/nrow(Stepint))
DF2[is.na(DF2)]<-repStepint[is.na(DF2)]
sum(is.na(DF2))
repStepint<-rep(Stepint,nrow(AMdata)/nrow(Stepint))
DF2[is.na(DF2)]<-repStepint[is.na(DF2)]
Natot<-sum(is.na(DF2))
print(Natot)
Steptotalnew<-tapply(DF2$step, DF2$date, sum,na)
Steptotalnew<-tapply(DF2$step, DF2$date, sum)
hist(Steptotalnew,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmeannew<-mean(Steptotalnew)
print(Stepmeannew)
Stepmednew<-median(Steptotalnew)
print(Stepmednew)
permean<-abs(Stepmean-Stepmeannew)/Stepmean*100
print(permean)
permed<-abs(Stepmed-Stepmednew)/Stepmed*100
print(permed)
?mutate
DF2<-mutate(DF2,Day=as.factor(weekdays(DF2$date)))
library(lubridate)
library(dplyr)
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
DF2<-mutate(DF2,Day=as.factor(weekdays(DF2$date)))
View(DF2)
DF2[DF2$Day=="Sunday"|DF2$Day=="Satday"]
DF2[DF2$Day=="Sunday"|DF2$Day=="Satday",]
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]
DF2$Day[DF2$Day!=="weekend"]
DF2$Day[DF2$Day=="weekend"]
library(lubridate)
library(dplyr)
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
Natot<-sum(is.na(DF2))
print(Natot)
repStepint<-rep(Stepint,nrow(AMdata)/nrow(Stepint))
DF2[is.na(DF2)]<-repStepint[is.na(DF2)]
Natot<-sum(is.na(DF2))
print(Natot)
Steptotalnew<-tapply(DF2$step, DF2$date, sum)
hist(Steptotalnew,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmeannew<-mean(Steptotalnew)
print(Stepmeannew)
Stepmednew<-median(Steptotalnew)
print(Stepmednew)
permean<-abs(Stepmean-Stepmeannew)/Stepmean*100
print(permean)
permed<-abs(Stepmed-Stepmednew)/Stepmed*100
print(permed)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2<-mutate(DF2,Day=weekdays(DF2$date))
View(DF2)
names(DF@)
names(DF2)
str(DF2)
library(lubridate)
library(dplyr)
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
AMdata$date<-ymd(AMdata$date)
Steptotal<-tapply(AMdata$step, AMdata$date, sum,na.rm=T)
hist(Steptotal,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmean<-mean(Steptotal,na.rm=T)
print(Stepmean)
Stepmed<-median(Steptotal,na.rm=T)
print(Stepmed)
Stepint<-tapply(AMdata$step, AMdata$interval, mean,na.rm=T)
plot(AMdata$interval[1:length(Stepint)],Stepint,type = "l",xlab = "5 Second Interval",ylab = "Number of Steps",main = "Average steps per interval")
Max<-max(Stepint)
Intmax<-Stepint[Stepint==Max]
print(Intmax)
library(zoo)
Natot<-sum(is.na(AMdata$steps))
print(Natot)
DF2<-AMdata
DF2$steps<-na.approx.default(AMdata$steps,na.rm = F)
Natot<-sum(is.na(DF2))
print(Natot)
repStepint<-rep(Stepint,nrow(AMdata)/nrow(Stepint))
DF2[is.na(DF2)]<-repStepint[is.na(DF2)]
Natot<-sum(is.na(DF2))
print(Natot)
Steptotalnew<-tapply(DF2$step, DF2$date, sum)
hist(Steptotalnew,xlab = "Number of steps",main = "Histogram of number of steps")
Stepmeannew<-mean(Steptotalnew)
print(Stepmeannew)
Stepmednew<-median(Steptotalnew)
print(Stepmednew)
permean<-abs(Stepmean-Stepmeannew)/Stepmean*100
print(permean)
permed<-abs(Stepmed-Stepmednew)/Stepmed*100
print(permed)
str(DF2)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[DF2$Day!=="weekend"]<-"weekday"
DF2$Day[!DF2$Day=="weekend"]
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
View(DF2)
str(DF2)
library(lubridate)
library(dplyr)
library(ggplot2)
unzip("activity.zip")
AMdata<-read.csv("activity.csv")
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(.~DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(DF2$Day~)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(DF2$Day~.)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=tapply(DF2$steps,DF2$interval,mean))
g+geom_line()+facet_grid(DF2$Day~.)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=tapply(DF2$steps,DF2$interval,mean)))
g+geom_line()+facet_grid(DF2$Day~.)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval[1:nrow(tapply(DF2$steps,DF2$interval,mean))],y=tapply(DF2$steps,DF2$interval,mean)))
g+geom_line()+facet_grid(DF2$Day~.)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
g<-ggplot(data = DF2,aes(x=DF2$interval,y=DF2$steps))
g+geom_line()+facet_grid(DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)+labs(y="Steps",x="Interval",title = "Weekend vs Weekdays")
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
plot(DF2$interval,DF2$steps,~DF2$Day)
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
plot(DF2$interval,DF2$steps,type="l")
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)+labs(y="Steps",x="Interval",title = "Weekend vs Weekdays")
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
par(mfrow=c(2,1))
plot(DF2$interval,DF2$steps,type="l")
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)+labs(y="Steps",x="Interval",title = "Weekend vs Weekdays")
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
par(mfrow=c(2,1))
plot(DF2$interval,DF2$steps,type="l")
plot(DF2$interval,DF2$steps,type="l")
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)+labs(y="Steps",x="Interval",title = "Weekend vs Weekdays")
DF2<-mutate(DF2,Day=weekdays(DF2$date))
DF2$Day[DF2$Day=="Sunday"|DF2$Day=="Satday"]<-"weekend"
DF2$Day[!DF2$Day=="weekend"]<-"weekday"
DF2$Day<-as.factor(DF2$Day)
Valmean<-tapply(DF2$steps, DF2$interval, mean)
DF2$steps<-rep(Valmean,nrow(DF2)/nrow(Valmean))
g<-ggplot(data = DF2,aes(x=interval,y=steps))
g+geom_line()+facet_grid(DF2$Day)+labs(y="Steps",x="Interval",title = "Weekend vs Weekdays")
